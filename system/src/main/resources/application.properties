# 数据库配置
spring.datasource.druid.url=jdbc:mariadb://localhost:3306/personnel_management_server
spring.datasource.druid.username=root
spring.datasource.druid.password=ztcztcztc
spring.datasource.druid.driver-class-name=org.mariadb.jdbc.Driver
# 连接池配置
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size=1
spring.datasource.druid.max-active=20
spring.datasource.druid.min-idle=1
# 缺省启用公平锁，并发效率会有所下降
spring.datasource.druid.max-wait=60000
# PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=true
# 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=100
# 检测连接是否有效
spring.datasource.druid.validation-query=select 1
# 检测连接是否有效的超时时间
spring.datasource.druid.validation-query-timeout=3
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
spring.datasource.druid.keep-alive=true
# 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
# 监控配置
# WebStatFilter配置
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=true
# StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
# StatViewServlet展示出来的监控信息比较敏感，是系统运行的内部情况，如果你需要做访问控制，可以配置allow和deny这两个参数。
# 白名单
spring.datasource.druid.stat-view-servlet.allow=
# 黑名单
spring.datasource.druid.stat-view-servlet.deny=
# Spring监控配置
# Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
spring.datasource.druid.aop-patterns=com.oldhandgo.personnelmanagementserver.service.*
# Spring Data JPA配置
# create: 启动服务时都会重新创建表，且不管表存不存在；
# create-drop: 启动服务时都会重新创建表，且不管表存不存在，服务停止时删除所有表，不管表中是否有数据；
# update: 启动服务时，自动更新表结构，但数据库表中存在的旧字段不会删除；
# validate: 启动服务时验证表结构，若表结构存在差异则抛出异常；
spring.jpa.hibernate.ddl-auto=update
# 展示SQL语句
spring.jpa.show-sql=true
# 在视图呈现期间执行数据库查询
spring.jpa.open-in-view=true
# JWT
jwt.header=Authorization
jwt.secret=mySecret
# token 过期时间 6个小时
jwt.expiration=21000000
# 授权路径
jwt.auth.path=/login
# 获取用户信息
jwt.auth.account:/info
# 文件存储路径
file.path=/home/dormirr/IdeaProjects/personnel-management-server/file
file.avatar=/home/dormirr/IdeaProjects/personnel-management-server/avatar
# 文件大小 /M
file.maxSize=100
file.avatarMaxSize=5